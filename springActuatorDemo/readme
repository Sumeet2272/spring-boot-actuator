

To activate spring actuator
- we have to add actuator dependency in project
 
 <dependency>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-actuator</artifactId>
</dependency>

- actuator comes with most of the end-points disabled
- by default only two end-points are available i.e. /health and /info.
- by default, all Actuator end-points are now placed under the /actuator path

- we can enable all of them by
	management.endpoints.web.exposure.include=* 
	
- to explicitly enable a specific endpoint (e.g., /shutdown), we use:
management.endpoint.shutdown.enabled=true

- To expose all enabled end-points except one (e.g., /loggers), we use:
management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.exclude=loggers	

- we can customize /info endpoint using following configurations
info.app.name=Spring Actuator demo Application
info.app.description=This is demo application for spring actuator
info.app.version=1.0.0

- Spring Boot 2.x Actuator support CURD model,
it supports read, writes and delete operation with the end-points.
The @Endpoint annotation can be used in combination with 
@ReadOperation,@WriteOperation and @DeleteOperation to develop end-points.